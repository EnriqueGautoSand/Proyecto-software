DROP TRIGGER IF EXISTS descontarstockenventa on renglon;
DROP FUNCTION  IF EXISTS  descontarstockenventa CASCADE  ;
DROP FUNCTION  IF EXISTS  sumarstockencompra CASCADE ;
DROP FUNCTION  IF EXISTS  sumarstockenventanulada CASCADE ;
DROP FUNCTION  IF EXISTS  actualiarstockencompranulada CASCADE ;
create function descontarstockenventa() returns Trigger
as
$$
begin

update productos set stock=stock-new.cantidad 
	where productos.id =new.producto_id;
return new;

end
$$
Language plpgsql VOLATILE;

create trigger updateproductosventa
	after insert on renglon
	for each row
	execute procedure descontarstockenventa();

DROP TRIGGER IF EXISTS sumarstockencompra on renglon_compras;
create function sumarstockencompra() returns Trigger
as
$$
begin

update productos set stock=stock+new.cantidad 
	where productos.id =new.producto_id;
return new;

end
$$
Language plpgsql VOLATILE;

create trigger updateproductoscompra
	after insert on renglon_compras
	for each row
	execute procedure sumarstockencompra();
	
DROP TRIGGER IF EXISTS sumarstockenventanulada on ventas;

create function sumarstockenventanulada() returns Trigger
as
$$
begin
if not new."Estado" then
update productos  set stock=stock+renglon.cantidad from  
 renglon where renglon.venta_id=new.id  and productos.id =renglon.producto_id;
else
update productos  set stock=stock-renglon.cantidad from  
 renglon where renglon.venta_id=new.id  and productos.id =renglon.producto_id;
end if;
return new;

end
$$
Language plpgsql VOLATILE;

create trigger updateproductosventanulada
	after update on ventas
	for each row
	execute procedure sumarstockenventanulada();


create function actualiarstockencompranulada() returns Trigger
as
$$
begin
if not new."Estado" then
update productos  set stock=stock-renglon_compras.cantidad from  
 renglon_compras where renglon_compras.compra_id=new.id  and productos.id =renglon_compras.producto_id;
else
update productos  set stock=stock+renglon_compras.cantidad from  
 renglon_compras where renglon_compras.compra_id=new.id  and productos.id =renglon_compras.producto_id;
end if;
return new;

end
$$
Language plpgsql VOLATILE;

create trigger updateproductoscompranulada
	after update on compras
	for each row
	execute procedure actualiarstockencompranulada()